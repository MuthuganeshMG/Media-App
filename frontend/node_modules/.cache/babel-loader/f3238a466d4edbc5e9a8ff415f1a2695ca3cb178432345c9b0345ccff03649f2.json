{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MG\\\\OneDrive\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\components\\\\PlayList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayList = () => {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [playlistSongs, setPlaylistSongs] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/playlists\").then(res => {\n      setPlaylists(res.data);\n    }).catch(err => {\n      console.error(\"Error fetching playlists:\", err);\n    });\n  }, []);\n  const fetchSongDetails = async playlistSongs => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/songs\");\n      const allSongs = response.data;\n      const matchingSongs = playlistSongs.map(playlistSong => {\n        return allSongs.find(song => song.title === playlistSong);\n      });\n      return matchingSongs.filter(Boolean);\n      // Filter out undefined/null values\n    } catch (error) {\n      console.error(\"Error fetching song details:\", error);\n      return [];\n    }\n  };\n  const handlePlaylistClick = async playlistName => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/playlists/${encodeURIComponent(playlistName)}/songs`);\n      const songs = response.data;\n      const matchingSongs = await fetchSongDetails(songs);\n      setPlaylistSongs(matchingSongs);\n      setSelectedPlaylist(playlistName);\n    } catch (error) {\n      console.error(\"Error fetching playlist songs:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"playlist-heading\",\n      children: \"Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"playlist-list\",\n      children: playlists.map((playlist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"playlist-item\",\n        onClick: () => handlePlaylistClick(playlist.name),\n        children: playlist.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), selectedPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-songs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Songs in \", selectedPlaylist, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlistSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [song.title, \" - \", song.artist]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayList, \"Yf6nnPiEGHjUOfAFpyAv3LVa7as=\");\n_c = PlayList;\nexport default PlayList;\nvar _c;\n$RefreshReg$(_c, \"PlayList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PlayList","_s","playlists","setPlaylists","selectedPlaylist","setSelectedPlaylist","playlistSongs","setPlaylistSongs","get","then","res","data","catch","err","console","error","fetchSongDetails","response","allSongs","matchingSongs","map","playlistSong","find","song","title","filter","Boolean","handlePlaylistClick","playlistName","encodeURIComponent","songs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","playlist","index","onClick","name","artist","_c","$RefreshReg$"],"sources":["C:/Users/MG/OneDrive/Desktop/New folder/frontend/src/components/PlayList.jsx"],"sourcesContent":["import React,\r\n{\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nconst PlayList = () => {\r\n    const [playlists, setPlaylists] = useState([]);\r\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n    const [playlistSongs, setPlaylistSongs] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:5000/api/playlists\")\r\n            .then((res) => {\r\n                setPlaylists(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error fetching playlists:\", err);\r\n            });\r\n    }, []);\r\n\r\n    const fetchSongDetails = async (playlistSongs) => {\r\n        try {\r\n            const response =\r\n                await axios.get(\"http://localhost:5000/api/songs\");\r\n            const allSongs = response.data;\r\n            const matchingSongs =\r\n                playlistSongs.map((playlistSong) => {\r\n                    return allSongs.find(\r\n                        (song) =>\r\n                            song.title === playlistSong);\r\n                });\r\n            return matchingSongs.filter(Boolean); \r\n            // Filter out undefined/null values\r\n        } catch (error) {\r\n            console.error(\"Error fetching song details:\", error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    const handlePlaylistClick = async (playlistName) => {\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/playlists/${encodeURIComponent(\r\n                    playlistName\r\n                )}/songs`\r\n            );\r\n            const songs = response.data;\r\n            const matchingSongs =\r\n                await fetchSongDetails(songs);\r\n            setPlaylistSongs(matchingSongs);\r\n            setSelectedPlaylist(playlistName);\r\n        } catch (error) {\r\n            console.error(\"Error fetching playlist songs:\", error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"playlist-container\">\r\n            <h1 className=\"playlist-heading\">Playlists</h1>\r\n            <ul className=\"playlist-list\">\r\n                {\r\n                    playlists.map((playlist, index) => (\r\n                        <li\r\n                            key={index}\r\n                            className=\"playlist-item\"\r\n                            onClick={\r\n                                () =>\r\n                                    handlePlaylistClick(playlist.name)\r\n                            }>\r\n                            {playlist.name}\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n            {selectedPlaylist && (\r\n                <div className=\"playlist-songs\">\r\n                    <h3>Songs in {selectedPlaylist}:</h3>\r\n                    <ul>\r\n                        {\r\n                            playlistSongs.map((song, index) => (\r\n                                <li key={index}>\r\n                                    {song.title} - {song.artist}\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}